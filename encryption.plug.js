var y=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var i=new Map,c=0;function a(t){self.postMessage(t)}y&&(globalThis.syscall=async(t,...n)=>await new Promise((r,e)=>{c++,i.set(c,{resolve:r,reject:e}),a({type:"sys",id:c,name:t,args:n})}));function d(t,n){y&&(self.addEventListener("message",r=>{(async()=>{let e=r.data;switch(e.type){case"inv":{let s=t[e.name];if(!s)throw new Error(`Function not loaded: ${e.name}`);try{let o=await Promise.resolve(s(...e.args||[]));a({type:"invr",id:e.id,result:o})}catch(o){console.error("An exception was thrown as a result of invoking function",e.name,"error:",o.message),a({type:"invr",id:e.id,error:o.message})}}break;case"sysr":{let s=e.id,o=i.get(s);if(!o)throw Error("Invalid request id");i.delete(s),e.error?o.reject(new Error(e.error)):o.resolve(e.result)}break}})().catch(console.error)}),a({type:"manifest",manifest:n}))}function b(t){let n=atob(t),r=n.length,e=new Uint8Array(r);for(let s=0;s<r;s++)e[s]=n.charCodeAt(s);return e}function p(t){typeof t=="string"&&(t=new TextEncoder().encode(t));let n="",r=t.byteLength;for(let e=0;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}async function x(t,n){if(typeof t!="string"){let r=new Uint8Array(await t.arrayBuffer()),e=r.length>0?p(r):void 0;n={method:t.method,headers:Object.fromEntries(t.headers.entries()),base64Body:e},t=t.url}return syscall("sandboxFetch.fetch",t,n)}globalThis.nativeFetch=globalThis.fetch;function v(){globalThis.fetch=async function(t,n){let r=n&&n.body?p(new Uint8Array(await new Response(n.body).arrayBuffer())):void 0,e=await x(t,n&&{method:n.method,headers:n.headers,base64Body:r});return new Response(e.base64Body?b(e.base64Body):null,{status:e.status,headers:e.headers})}}y&&v();function l(t){let n="",r=new Uint8Array(t),e=r.byteLength;for(let s=0;s<e;s++)n+=String.fromCharCode(r[s]);return btoa(n)}function u(t){for(var n=atob(t),r=n.length,e=new Uint8Array(r),s=0;s<r;s++)e[s]=n.charCodeAt(s);return e.buffer}var f=async t=>{let n=new TextEncoder("utf-8").encode(t);return await crypto.subtle.digest("SHA-256",n)},A=async(t,n)=>{let r=crypto.getRandomValues(new Uint8Array(12)),e=new TextEncoder().encode(t),s=await crypto.subtle.importKey("raw",n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),o=await crypto.subtle.encrypt({name:"AES-GCM",iv:r},s,e);return{ciphertext:l(o),iv:l(r)}},E=async(t,n,r)=>{let e=await crypto.subtle.importKey("raw",r,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),s=await crypto.subtle.decrypt({name:"AES-GCM",iv:u(n)},e,u(t));return new TextDecoder().decode(s)};async function h(t,n){let r=await f(n),{ciphertext:e,iv:s}=await A(t,r);return e+" "+s}async function m(t,n,r){let e=await f(r);return await E(t,n,e)}var g={encrypt:h,decrypt:m},w={name:"encryption",functions:{encrypt:{path:"encryption.ts:encrypt",command:{name:"Encrypt text"}},decrypt:{path:"encryption.ts:decrypt",command:{name:"Decrypt text"}}},assets:{}},B={manifest:w,functionMapping:g};d(g,w);export{B as plug};
